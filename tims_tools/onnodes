#!/usr/bin/env python3
import sys
import os
domem=False
dops=False

def doshow(n):
# parse scontrol show and return a dictionary
    c1="scontrol show -o node XXXX" 
    c1=c1.replace("XXXX",n)
    f2=os.popen(c1,"r")
    line1 = f2.readline()
    bonk={}
    line1=line1.split()
    #print(line1)
    for l2 in line1:
        #print(l2)
        if l2.find("=") > -1 :
            l2=l2.split("=")
            key=l2[0]
            text=l2[1]
            bonk[key]=text
        else:
            bonk[key]=bonk[key]+" "+ l2
    return(bonk)

me=sys.argv[0]
if me.find("onnodes")> -1 : dops=True
if me.find("mem")> -1 : domem=True
if me.find("ps")> -1 : dops=True
if len(sys.argv) > 1 :
    job=sys.argv[1]
else:
    command="squeue -hu $USER"
    f2=os.popen(command,"r")
    job=f2.read()
    if len(job) == 0:
       print("no jobs found")
       sys.exit()
    job=job.split()
    job=job[0]
command='squeue -u $USER -j $1 -ho %N'
command=command.replace("$1",job)
f2=os.popen(command,"r")
list=f2.read()
f2.close()
command="scontrol show hostnames $list"
command=command.replace("$list",list)
f2=os.popen(command,"r")
long=f2.readlines()
for l in long:
    l=l.strip()
    print(l)
    if domem :
        command="ssh $l cat /proc/meminfo | grep Mem"
    # idea: cat /proc/1234/stat
    # see  man proc for a description of what is in /proc
        command=command.replace("$l",l)
        f2=os.popen(command,"r")
        lines=f2.readlines()
        for x in lines:
            print(x.strip())
        f2.close()
    if not dops : 
        continue
    bonk=doshow(l)
    for x in ['CPUAlloc','CPUTot','CPULoad','RealMemory','FreeMem'] :
        print(x,"=",bonk[x],end =" ")
    print()
    command="ssh XXXX 'ps -U $USER -L -o pid,lwp,psr,comm,pcpu,%mem | grep -v COMMAND | sort -k3n'"
    print(command)
    print("   PID    LWP PSR COMMAND         %CPU %mem")
    #print(command)
    command=command.replace("XXXX",l)
    f2=os.popen(command,"r")
    while 1:
        try:
            line = f2.readline()
        except KeyboardInterrupt:
            break
        if not line:
            break
        f=line.split()
        if (len(f) > 1): 
            same=False
            if(str.isdigit(f[0])):
                same=f[0] == f[1]
            if (same):print("\u001b[31m",end="")
            print(line.strip())
            if (same):print("\u001b[30m",end="")
    #command="ssh XXXX nvidia-smi"
    #command=command.replace("XXXX",l)
    #f2=os.popen(command,"r")
    #gpulines=f2.readlines()
    #print(gpulines)
    
