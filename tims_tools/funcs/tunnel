tunnel () 
{ 
    if [ $# -lt 2 ]; then
        echo "Usage:";
        echo "tunnel NODE_NAME PORT";
        echo "tunnel -help";
        if [[ $1 = -h* ]]; then
            echo "where NODE_NAME is the node on which you are running.";
            echo "PORT is the number, usually 8888 returned by jupyter.";
            echo "After running this function copy the http://... string ";
            echo "returned by jupyter to your local browser. ";
            echo " ";
            echo "If you get a message of the form:";
            echo "bind [127.0.0.1]:8888: Address already in use";
            echo "You can close the port.";
            echo "Run the following command on your linux/Mac :";
            echo "lsof -i TCP:8888 | grep ssh | awk '{print $2}' | head -1";
            echo "This will give the process id using the port, say 12768.";
            echo "Then run the kill command on the process, for example:";
            echo "     kill 12768";
            echo "If you don't want to close the port you can run this command";
            echo "and specify a new local port, say 8889";
            echo "     tunnel el1 8888 8895";
            echo "Then when you copy the string from jupyter replace 8888 with 8895.";
        fi;
        return -1;
    fi;
    echo "$2" | grep --color=auto -E ^\-?[0-9]+$ > /dev/null;
    if [ $? -ne 0 ]; then
        echo "Usage:";
        echo "tunnel NODE_NAME PORT";
        echo "tunnel -help";
        return -1;
    fi;
    port=$2;
    node=$1;
    lport=$port;
    if [ $# -eq 3 ]; then
        lport=$3;
    fi;
    case $node in 
        k*)
            echo "Running:";
            echo ssh -t -L $lport:localhost:$port $node.hpc.nrel.gov;
            ssh -t -L $lport:localhost:$port $node.hpc.nrel.gov
        ;;
        e*)
            echo "Running:";
            echo ssh -t -L $lport:localhost:$port $node.hpc.nrel.gov;
            ssh -t -L $lport:localhost:$port $node.hpc.nrel.gov
        ;;
        s*)
            echo "Running:";
            echo ssh -t -L $lport:localhost:$port $node.hpc.nrel.gov;
            ssh -t -L $lport:localhost:$port $node.hpc.nrel.gov
        ;;
        vs-login*)
            echo "Running:";
            echo ssh -t -L $lport:localhost:$port $node.hpc.nrel.gov;
            ssh -t -L $lport:localhost:$port $node.hpc.nrel.gov
        ;;
        1*)
            echo "Running:";
            echo ssh -t -L $lport:localhost:$port $node;
            ssh -t -L $lport:localhost:$port $node
        ;;
        r*)
            echo "Running:";
            addto=$(( $RANDOM % 1000 ));
            p=$(( 8100 + $addto));
            echo ssh -t -L $lport:localhost:$p eagle ssh -L $p:localhost:$port $node;
            ssh -t -L $lport:localhost:$p eagle ssh -L $p:localhost:$port $node
        ;;
        x*)
            echo "Running:";
            addto=$(( $RANDOM % 1000 ));
            p=$(( 8100 + $addto));
            echo ssh -t -L $lport:localhost:$p kestrel ssh -L $p:localhost:$port $node;
            ssh -t -L $lport:localhost:$p kestrel ssh -L $p:localhost:$port $node
        ;;
        c*)
            echo "Running:";
            addto=$(( $RANDOM % 1000 ));
            p=$(( 8100 + $addto));
            echo ssh -t -L $lport:localhost:$p swift-login-1 ssh -L $p:localhost:$port $node;
            ssh -t -L $lport:localhost:$p swift-login-1 ssh -L $p:localhost:$port $node
        ;;
        v*)
            echo "Running:";
            addto=$(( $RANDOM % 1000 ));
            p=$(( 8100 + $addto));
            echo ssh -t -L $lport:localhost:$p vs-login-1 ssh -L $p:localhost:$port $node;
            ssh -t -L $lport:localhost:$p vs-login-1 ssh -L $p:localhost:$port $node
        ;;
        pie)
            echo "Running on home cluster head node";
            echo ssh -t -L $lport:localhost:$port $node;
            ssh -t -L $lport:localhost:$port $node
        ;;
        pi0)
            echo "Running on home cluster compute node:";
            addto=$(( $RANDOM % 1000 ));
            p=$(( 8100 + $addto));
            echo ssh -t -L $lport:localhost:$p pie ssh -L $p:localhost:$port $node;
            ssh -t -L $lport:localhost:$p pie ssh -L $p:localhost:$port $node
        ;;
        *)
            echo "unknow host node - trying no hop";
            echo ssh -t -L $lport:localhost:$port $node;
            ssh -t -L $lport:localhost:$port $node
        ;;
    esac
}
