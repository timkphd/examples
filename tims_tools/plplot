#!/usr/bin/env python3
import sys
from pylab import *
import math
import EasyDialogs
import warnings
import time
import os

warnings.simplefilter("ignore")

def dummy():
    lines=[]
    from math import sin
    from math import cos
    from math import pi
    for x in range(0,101):
        xin=x*2*pi/100.0
        yin=sin(xin)*cos(xin)
        aline=str(xin)+" "+str(yin)
        lines.append(aline)
    return(lines)


paths=[]
if len(sys.argv) > 1:
    for pathname in sys.argv[1:]:
#        print pathname
        paths.append(pathname)
else:
    pathname=" "
    while pathname:
        pathname = EasyDialogs.AskFileForOpen(message='File to plot:')
        if pathname:
#            print pathname
            paths.append(pathname)
    
ip=len(paths)
bottom=" "
side=" "
top=" "
bottom=EasyDialogs.AskString("bottom label","x axis")
side=EasyDialogs.AskString("side label","y axis")
top=EasyDialogs.AskString("title","the title")
log=EasyDialogs.AskString("log","none")
xrange="auto"
yrange="auto"
xrange=EasyDialogs.AskString("X-range",xrange)
yrange=EasyDialogs.AskString("Y-range",yrange)
dosym=EasyDialogs.AskString("Do Symbols","n")
dosym=(dosym == "y")
lw=1
lw=EasyDialogs.AskString("lw","1")
lw=float(lw)

xray={}
yray={}
i=0
dosmall=False
if(sys.argv[0].find("xkcd")> 0):
    try:
        # If the name of the program contains xkcd, that is we do a link
        # lrwxr-xr-x  1 tkaiser  staff  6 Aug 24 09:10 plxkcd -> plplot
        # then plots will be in the https://xkcd.com style.
        xkcd()
        dosmall=True    
    except:
        print("xkcd not found")
kplot=-1
for pathname in paths:
    kplot=kplot+1
    try:
        f=open(pathname)
        lines=f.readlines()
        f.close()
    except:
        lines=dummy()
        paths[kplot]="sin(x)*cos(x)"

    a=[]
    b=[]
    for line in lines:
        try:
            data=line.split()
            x=float(data[0])
            y=float(data[1])
            a.append(x)
            b.append(y)
        except:
            break
    xray[i]=a
    yray[i]=b
    i=i+1



if(log.find("x") > -1 or  log.find("X") > -1 or log.find("both") > -1 or log.find("Both") > -1):
    xscale("log")
if(log.find("y") > -1 or  log.find("Y") > -1 or log.find("both") > -1 or log.find("Both") > -1):
    yscale("log")

leg=[]
sym=['+','o','*','x','#','X','0']
leggs=EasyDialogs.AskFileForOpen("Legend file:")
if(leggs):
    f=open(leggs)
    for p in paths:
        p=f.readline()
        p=p.strip()
        leg.append(p)
else:
    for p in paths:
        p=p.split("/")
        leg.append(p[len(p)-1])
isym=0
for myplot in range(0,ip) :
        if(dosym):
            if (lw == 0):
                plot(xray[myplot], yray[myplot], sym[isym],linewidth=lw)
            else:
                sym[isym]=sym[isym]+"-"
                plot(xray[myplot], yray[myplot], sym[isym],linewidth=lw)
        else :
            plot(xray[myplot], yray[myplot], linewidth=lw)
        isym=isym+1
        
if(len(leg) > 0):
    legend(leg,loc=0)
if(xrange != "auto"):
    xrange=xrange.replace(","," ")
    xrange=xrange.replace(":"," ")
    xrange=xrange.strip()
    [xmin,xmax]=xrange.split()
    xmin=float(xmin)
    xmax=float(xmax)
    xlim(xmin,xmax)

if(yrange != "auto"):
    yrange=yrange.replace(","," ")
    yrange=yrange.replace(":"," ")
    yrange=yrange.strip()
    [ymin,ymax]=yrange.split()
    ymin=float(ymin)
    ymax=float(ymax)
    ylim(ymin,ymax)
    
if dosmall:
    xlabel(bottom,fontsize=10)
    ylabel(side,fontsize=10)
else:
    xlabel(bottom)
    ylabel(side)

title(top)
grid(True)
x=time.localtime()
stime=("%2.2d%2.2d%2.2d%2.2d%2.2d%2.2d" % (x[0]-2000,x[1],x[2],x[3],x[4],x[5]))
stime=os.getenv("HOME")+"/plots/"+stime+".pdf"
didsave=False
didshow=False
try:
    savefig(stime)
    didsave=True
except:
    pass
host=os.getenv("HOSTNAME")
who=os.getlogin()
#print who+"@"+host+":"+stime
try:
    show()
    didshow=True
except:
    pass
print("saved:",didsave," displayed:",didshow)
