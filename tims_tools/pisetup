##### install a bunch of packages need by other things 
date
#First window
#touch new.log
#tail -f new.log
#
#Second window
#source new > new.log 2>&1

STD=`pwd`
sudo apt-get -y update 
sudo apt-get -y upgrade 
 
sudo apt-get -y install gfortran 
 
sudo apt-get -y install gedit 
sudo apt-get -y install filezilla 
 
 
sudo apt-get -y install libatlas-base-dev 
sudo apt-get -y install libffi-dev 
 
sudo apt-get -y install mencoder 
 
sudo apt-get -y install tcl8.6
sudo apt-get -y install tcl8.6-dev

sudo apt-get -y install subversion 
 
sudo apt-get -y install libatlas-base-dev 
    
sudo apt-get -y install libreadline-dev 
 
sudo apt-get -y install libx11-dev 
sudo apt-get -y install x11-common 
sudo apt-get -y install libxt-dev 
 
sudo apt-get -y install libbz2-dev 
sudo apt-get -y install liblzma-dev 
 
sudo apt-get -y install libpcre3-dev 
sudo apt-get -y install libcurl4-openssl-dev 
 
sudo apt-get -y install nedit 

sudo apt-get -y install apache2

sudo apt-get -y install libjpeg-dev
sudo apt-get -y install libssl-dev
 
sudo apt-get -y update 
sudo apt-get -y upgrade

sudo apt-get -y install octave
echo "graphics_toolkit('gnuplot')" > ~/.octaverc
 
sudo apt-get -y install ccrypt

sudo apt-get -y install git-gui

sudo apt -y install virtualenv

#sqlite is needed fot jupyter to work
sudo apt -y install sqlite
sudo apt -y install libsqlite3-dev


##### install openmpi 
 
wget https://download.open-mpi.org/release/open-mpi/v4.1/openmpi-4.1.0.tar.gz
 
tar -xzf  openmpi-4.1.0.tar.gz 
cd openmpi-4.1.0
./configure --prefix=/opt/mpi/openmpi/4.1.0
#./configure 
make -j 4
sudo make install 

##### install mpich 
cd ..
wget http://www.mpich.org/static/downloads/3.4/mpich-3.4.tar.gz
tar -xzf  mpich-3.4.tar.gz 
cd mpich-3.4
./configure --prefix=/opt/mpi/mpich/3.4 --with-device=ch3
#./configure 
make -j 4
sudo make install 



# install newer python
cd /opt
sudo mkdir python
sudo chown pi:pi python
cd python

# need to adjust swap for scipy to build
cat << END > bigswap
sudo /bin/dd if=/dev/zero of=/var/swap.1 bs=1M count=1024
sudo /sbin/mkswap /var/swap.1
sudo chmod 600 /var/swap.1
sudo /sbin/swapon /var/swap.1
END

cat << END > normswap
sudo swapoff /var/swap.1
sudo rm /var/swap.1
END

for PIV in 3.9.1 ; do
wget https://www.python.org/ftp/python/${PIV}/Python-${PIV}.tgz
tar -xzf Python-${PIV}.tgz
cd Python-${PIV}
./configure --enable-optimizations --prefix=/opt/python/${PIV} --enable-loadable-sqlite-extensions
make -j  4
make install
export PATH=/opt/python/${PIV}/bin:$PATH
python3 -m pip install --upgrade pip
pip3 install wheel
pip3 install matplotlib 
pip3 install xkcd
pip3 install notebook
# pandas/scipy takes a long time to install
source /opt/python/bigswap
#pip3 install pandas
#pip3 install scipy
source /opt/python/normswap



export SPATH=$PATH
export SLIB=$LD_LIBRARY_PATH

mkdir ~/conda
cd ~/conda 

virtualenv ${PIV}a -p /opt/python/${PIV}/bin/python3 --system-site-packages
source ${PIV}a/bin/activate

cd ~
### install mpi4py in our virtual environment
export LD_LIBRARY_PATH=/opt/mpi/openmpi/4.1.0/lib:$LD_LIBRARY_PATH
export PATH=/opt/mpi/openmpi/4.1.0/bin:$PATH
pip3 install --no-cache-dir mpi4py
deactivate

export PATH=$SPATH
export LD_LIBRARY_PATH=$SLIB

cd ~/conda 
virtualenv ${PIV}b -p /opt/python/${PIV}/bin/python3 --system-site-packages
source ${PIV}b/bin/activate

export LD_LIBRARY_PATH=/opt/mpi/mpich/3.4/lib:$LD_LIBRARY_PATH
export PATH=/opt/mpi/mpich/3.4/bin:$PATH
pip3 install --no-cache-dir mpi4py

export PATH=$SPATH
export LD_LIBRARY_PATH=$SLIB

done


# install newer python done

##### install R from source since package version is old
export VERSION=3.6.1 
 
export RBASE=/home/$USER/R/$VERSION 
mkdir -p ${RBASE}_src 
cd ${RBASE}_src 
 
wget https://cran.r-project.org/src/base/R-3/R-$VERSION.tar.gz 
tar -xzf R-$VERSION.tar.gz 
cd R-$VERSION 
 
  
 
export CFLAGS="-O2 -fopenmp" 
export FCFLAGS="-O2 -fopenmp" 
export CXXFLAGS="-O2 -fopenmp" 
export LDFLAGS="-fopenmp -lblas -llapack" 
 
export R_LIBS=$RBASE/local 
mkdir -p $R_LIBS 
 
./configure --with-blas="-L/usr/lib/arm-linux-gnueabihf -lblas" --with-lapack  --prefix=$RBASE 
 
make -j 4
make install 
 
##### Get Tims examples 
cd ~
curl https://codeload.github.com/timkphd/examples/zip/master -o examples.Z  
unzip examples.Z  
mv examples-master new_examples 

##### copy tools to ~/bin
mkdir ~/bin
cp -r new_examples/tims_tools/* ~/bin
chmod 755 ~/bin/*


##### install Rmpi 
export PATH=$RBASE/bin:$PATH  
export LD_LIBRARY_PATH=/opt/mpi/openmpi/4.1.0/lib:$LD_LIBRARY_PATH

rm -rf Rmpi_0.6-9.tar.gz 
 
curl https://cran.r-project.org/src/contrib/Rmpi_0.6-9.tar.gz -o Rmpi_0.6-9.tar.gz  

R CMD INSTALL --configure-args=" --with-Rmpi-include='/opt/mpi/openmpi/4.1.0/include' --with-Rmpi-libpath='/opt/mpi/openmpi/4.1.0/lib' --with-mpi='/opt/mpi/openmpi/4.1.0/bin/mpicc' --with-Rmpi-type='OPENMPI' "  Rmpi_0.6-9.tar.gz    

cd ~
Rscript examples/r/doinstall.R 

cd ~
##### Update .bashrc 
cp .bashrc .bashrc.`date +"%y%m%d%H%M"`
cat << XXX >> .bashrc 

## alias to enable/disable keys
alias keys='ssh-add -t 28800 ~/.ssh/forhpc'
alias killkeys='ssh-add -D'
export PATH=/home/$USER/bin:\$PATH  
## point to R
export VERSION=3.6.1 
export RBASE=/home/$USER/R/\$VERSION 
export PATH=$RBASE/bin:\$PATH   
export R_LIBS=$RBASE/local 
export LD_LIBRARY_PATH=/opt/mpi/openmpi/4.1.0/lib:/usr/local/lib:\$LD_LIBRARY_PATH
export PATH=/opt/mpi/openmpi/4.1.0/bin:\$PATH
export MANPATH=/opt/mpi/openmpi/4.1.0/shared/man:\$MANPATH
dompich() {
export LD_LIBRARY_PATH=\`echo \$LD_LIBRARY_PATH | sed "s,openmpi/4.1.0,mpich/3.4,g"\`
export PATH=\`echo \$PATH | sed "s,openmpi/4.1.0,mpich/3.4,g"\`
export MANPATH=\`echo \$MANPATH | sed "s,openmpi/4.1.0,mpich/3.4,g"\`
}
doopenmpi() {
export LD_LIBRARY_PATH=\`echo \$LD_LIBRARY_PATH | sed "s,mpich/3.4,openmpi/4.1.0,g"\`
export PATH=\`echo \$PATH | sed "s,mpich/3.4,openmpi/4.1.0,g"\`
export MANPATH=\`echo \$MANPATH | sed "s,mpich/3.4,openmpi/4.1.0,g"\`
}


XXX

#### Get some ssh and apache templates
#### Already in new_examples
#curl https://petra.acns.colostate.edu/pie/config_template -o ssh_template
#curl https://petra.acns.colostate.edu/pie/piChanges -o apache_settings

# get notebook
mkdir ~/public_html
cd ~/public_html
git clone https://github.com/timkphd/notebook.git .

##### Generate a ssh key for localhost access

ssh-keygen -f $HOME/.ssh/id_rsa  -P ""
cat $HOME/.ssh/id_rsa.pub >> $HOME/.ssh/authorized_keys

##### Generate a ssh key with random passphrase for remote access
pw=`LC_ALL=C tr -dc A-Za-z0-9 </dev/urandom | dd bs=10 count=1 2>/dev/null`
echo "MAKE A NOTE OF THIS PASSPHRASE FOR YOUR SSH KEY"
echo $pw
echo "MAKE A NOTE OF THIS PASSPHRASE FOR YOUR SSH KEY"
ssh-keygen -f $HOME/.ssh/forhpc -trsa -P $pw

echo "##### To do your own passphrase run the following command:"
echo "ssh-keygen -p -P $pw -f $HOME/.ssh/forhpc"

echo "##### To install the R GUI:"
echo "Rscript examples/r/ircmdr.R"

date



