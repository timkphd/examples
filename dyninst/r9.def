bootstrap: docker
from: rockylinux:9.3

%labels
	Maintainer Tim Kaiser
	Version 1.0

%help
    This is a Rocky Linux 9.3 container for running apptainer and compiling









%runscript
    echo "Running the main script from inside the Rocky Linux 9.3 container."
    echo APPTAINER
    /usr/bin/which apptainer
    apptainer --version
    apptainer --help
    /usr/bin/which gcc
    gcc -v
    /usr/bin/which python3
    python3 -V
    echo ". /aopt/libs/pygcc"
    . /aopt/libs/pygcc
    /usr/bin/which gcc
    gcc -v
    /usr/bin/which python3
    python3 -V
    echo dyninst in /test_dyninst is broken
    cd /test_dyninst
    . ./runit
    echo dyninst works with OUTSIDE=0
    export OUTSIDE=0
    ./trace_tool extra

%post
    echo "Installing packages into the Rocky Linux 9.3 container"
    ls /usr/bin
    dnf -y update
    #dnf -y install gcc
    dnf -y group install "Development Tools"
    dnf -y install git
    dnf -y install cmake
    dnf -y install make
    #dnf -y install python
    #dnf -y install python-devel
    dnf -y --allowerasing install curl-7.76.1-31.el9.x86_64
    dnf -y install wget
    dnf -y install epel-release 
    dnf -y install apptainer-suid
    dnf -y install sudo
    dnf -y install findutils
    dnf -y install gfortran
    dnf -y update python
    dnf -y install zlib-ng
    dnf -y install procps 
    dnf -y install perl
    dnf -y install sed
    


    mkdir /extra01
    mkdir /extra02
    mkdir /extra03
    mkdir /extra04


    mkdir -p /aopt/spack
    cd /aopt/spack

    git clone -c feature.manyFiles=true https://github.com/spack/spack.git  
    wget https://raw.githubusercontent.com/timkphd/examples/master/tims_tools/setinstall
    chmod 755 setinstall
    cd spack
    ../setinstall `realpath -P etc/spack/defaults` /aopt/spack/install
    . share/spack/setup-env.sh
    spack compiler find
    spack external find gettext  || echo spack did not find gettext
    spack external find gmake    || echo spack did not find gmake
    spack external find cmake    || echo spack did not find cmake
    spack external find zlib-ng  || echo spack did not find zlib-ng
    spack external find perl     || echo spack did not find perl

    spack external find --exclude openssl
    #git checkout b431c4dc06ec0757b00b6f790be25b601f774a53
    # Do the install

    for pack in  gcc ; do 
      echo INSTALLING $pack
      spack install --no-check-signature --no-checksum $pack +binutils target=skylake
    done
    spack install --only  dependencies lmod target=skylake  || echo lmod failed dependencies
    spack install --show-log-on-error --keep-prefix lmod target=skylake  || echo lmod failed
    echo ". `find /aopt/spack/install/opt -name bash | grep lmod`" > /aopt/spack/domods
    echo export MODULEPATH=`find /aopt/spack/install/lmod -name Core` >> /aopt/spack/domods
    
    for pack in  curl  ; do 
      echo INSTALLING $pack
      spack install --no-check-signature --no-checksum $pack target=skylake
    done
    for pack in  apptainer  ; do 
      echo INSTALLING $pack
      spack install --no-check-signature --no-checksum $pack target=skylake
    done
    find /aopt/spack/install/opt -name spack_perms_fix.sh
    `find /aopt/spack/install/opt -name spack_perms_fix.sh`
    for pack in  "python@3.12.8 +ssl"  "python@3.13.1 +ssl" ; do 
      echo INSTALLING $pack
      spack install --no-check-signature --no-checksum $pack target=skylake
    done
      wget  https://bootstrap.pypa.io/get-pip.py

    for pack in  3.12.8 3.13.1 ; do 
      spack load python@$pack
      python3 -m venv /pythons/$pack
      . /pythons/$pack/bin/activate
      pip install numpy scipy pandas matplotlib jupyterlab
      deactivate
      spack unload python@$pack
    done
    for pack in dyninst ; do 
      echo INSTALLING $pack
      spack install --no-check-signature --no-checksum $pack target=skylake
    done
echo "void FaKeIt() {}" > dummy.c
gcc -c -fPIC dummy.c
mkdir -p /aopt/libs
gcc -shared dummy.o -o /aopt/libs/libfakeroot.so
strip --strip-all --discard-all --verbose /aopt/libs/libfakeroot.so 
#apt install -y  openssh-server
#apt install -y openssh-client
#systemctl enable sshd.service
#useradd -p $(openssl passwd -1 robin) -m -s $(which bash) -G sudo batman
#usermod -aG sudo batman

#build a simple dyninst test
    mkdir /test_dyninst
    cd /test_dyninst
    wget https://raw.githubusercontent.com/timkphd/examples/refs/heads/master/dyninst/extra.cpp
    wget https://raw.githubusercontent.com/timkphd/examples/refs/heads/master/dyninst/inverts.c
    wget https://raw.githubusercontent.com/timkphd/examples/refs/heads/master/dyninst/makefile
    wget https://raw.githubusercontent.com/timkphd/examples/refs/heads/master/dyninst/runit
    sed -ix '5s,^,export LD_LIBRARY_PATH=$BBASE/lib:$LD_LIBRARY_PATH\n,' runit || echo sed failed
    wget https://raw.githubusercontent.com/timkphd/examples/refs/heads/master/dyninst/tracelib.cpp
    wget https://raw.githubusercontent.com/timkphd/examples/refs/heads/master/dyninst/tracetool.cpp
    export DBASE=$(find /aopt/spack/install/opt  -name $(ls /aopt/spack/install/opt/*/*  | grep dyninst))
    export BBASE=$(find /aopt/spack/install/opt  -name $(ls /aopt/spack/install/opt/*/*  | grep boost))
    export IBASE=$(find /aopt/spack/install/opt  -name $(ls /aopt/spack/install/opt/*/*  | grep tbb))
    make

cat > /aopt/libs/mods <<STUFF
modules () {
  . /etc/profile.d/modules.sh
   module use /aopt/spack/install/lmod/*/Core 2> /dev/null
}
modules 
STUFF

cat > /aopt/libs/pygcc <<STUFF
   . /pythons/3.13.1/bin/activate
   module load gcc 2> /dev/null || . /aopt/libs/mods ; module load gcc gmake cmake 2> /dev/null
STUFF


%environment
    #systemctl restart sshd.service
    #export MODULEPATH=`find /aopt/spack/install/lmod -name Core`
    #export LD_PRELOAD=/aopt/libs/libfakeroot.so
    echo "# For newer programming envrionment run this commands:"
    echo ". /aopt/libs/pygcc"
    export LC_ALL=C
    export PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION=python
    export PATH=$(dirname $(find /aopt/spack/install/opt -name apptainer | grep bin)):$PATH
    export DBASE=$(find /aopt/spack/install/opt  -name $(ls /aopt/spack/install/opt/*/*  | grep dyninst))
    export BBASE=$(find /aopt/spack/install/opt  -name $(ls /aopt/spack/install/opt/*/*  | grep boost))
    export IBASE=$(find /aopt/spack/install/opt  -name $(ls /aopt/spack/install/opt/*/*  | grep tbb))
    . `find /aopt/spack/install/opt -name bash | grep lmod`
    export MODULEPATH=`find /aopt/spack/install/lmod -name Core`

